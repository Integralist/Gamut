var config = module.exports;

/*
For browser tests, list all your source files in "sources" and test files in "tests". 
For Node tests, you don't need to specify "sources" as you typically require your source files directly in the test files.
*/

config['My tests'] = {
    rootPath: '../',				// Set root path which is relative to where the config file is found
    environment: 'browser',			// or "node"
    sources: [
        'example.js' 				// Paths are relative to config file or rootPath
        //'../**/*.js'				// Glob patterns supported
    ],
    tests: [
        'test/*-test.js'			// All files named [whatever]-test.js will be run
    ]
}

// Add more configuration groups as needed

/*
To run Node tests open a terminal, go to your project, and type in buster test

To run Browser tests first, start a server. Open a terminal and type in 'buster server'.
Go to http://localhost:1111/ (or whatever port was opened) in a new browser and click on 'Capture browser'
Then in terminal open a new tab and execute 'buster test'
You can also show a different 'reporter' (the default is â€¦ but they aren't useful) so execute 'buster test --reporter specification' or 'buster test --reporter tap' instead
See http://busterjs.org/docs/browser-testing/ for more details

Instead of starting up a test server you can view a 'traditional' HTML page generated by Buster.
In the terminal type 'buster static' instead
*/