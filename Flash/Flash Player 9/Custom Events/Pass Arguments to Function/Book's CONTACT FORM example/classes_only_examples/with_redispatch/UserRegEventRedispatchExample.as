package {		import flash.events.Event;	import flash.display.MovieClip;	import UserRegistrationEvent;	public class UserRegEventRedispatchExample extends MovieClip {				//for redispatch demo only		private var _mc:MovieClip = new MovieClip();				public function UserRegEventRedispatchExample() {						//event complete listener			this.addEventListener(UserRegistrationEvent.USER_REGISTRATION_COMPLETE,								  onRegComplete, false, 0, true);						//event error listener			this.addEventListener(UserRegistrationEvent.USER_REGISTRATION_ERROR,								  onRegError, false, 0, true);						//moved to addedToStage function for redispatching demo only			this.addEventListener(Event.ADDED_TO_STAGE, onAdded, false, 0, true);					}					private function onRegComplete(evt:UserRegistrationEvent):void {		  			//place three custom data items into result text field, line breaks in-between			trace(evt.name);			trace(evt.age);			trace(evt.employed)						//trace all data available with event			trace(evt);						//redispatch: simple demonstration of need for clone override			//redispatched to placeholder mc target to create simple example that avoids recursion			_mc.dispatchEvent(evt);		}		private function onRegError(evt:UserRegistrationEvent):void {			//place alert text into Output panel			trace("Error during registration. Please check form input and try again.");		}		private function onAdded(evt:Event):void {			//for redispatch demo only			_mc.addEventListener(UserRegistrationEvent.USER_REGISTRATION_COMPLETE,								onRegComplete2, false, 0, true);			addChild(_mc);									//dispatch complete event, sending user name, age, and employment status with event			dispatchEvent(new UserRegistrationEvent(UserRegistrationEvent.USER_REGISTRATION_COMPLETE, "Sally", 2, false));						//or						//dispatch error event			//dispatchEvent(new UserRegistrationEvent(UserRegistrationEvent.USER_REGISTRATION_ERROR));		}				private function onRegComplete2(evt:UserRegistrationEvent):void {			//separator in Trace panel solely to distinguish event occurrences			trace("\n--\n");						//trace shows that info is coming along with redispatch.			//comment out clone override in class to see error upon redispatch			trace("redispatched:\n" + evt);		}			}}