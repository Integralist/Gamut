package {	import flash.display.*;	import flash.events.*;	import caurina.transitions.Tweener;		// When using Tweener class must be MovieClip!	public class Tweener_02 extends MovieClip {		// Define some variables to run this movie		private var button_array:Array;		// An array to hold all button instances. 		private var button_count:uint = 16;	// Use this to set the number of buttons created		private var row_count:uint = 4;		// Sets the number of buttons in each row. 				// The next few variables hold Objects that describe the Tweens that are used below to anomate the buttons. 		// This more convenient as it lets us makes changes in one place and shortens the scripts below. 		private var open_tween:Object = { scaleX:1.5, scaleY:1.5, time:1, transition:"easeoutelastic" };		private var close_tween:Object = { scaleX:1, scaleY:1, time:1, transition:"easeoutelastic" };		private var click_tween:Object = { scaleX:1.75, scaleY:1.75, time:0.25, transition:"easeinoutelastic" };		private var select_tween:Object = { _color:0xFF0000, time:0.5, transition:"linear" };		private var deselect_tween:Object = { _color:0x000000, time:0.5, transition:"linear" };		private var intro_tween:Object = { scaleX:1, scaleY:1, time:1, transition:"easeoutelastic", delay:0 }				public function Tweener_02() {			button_array = new Array();	// Define an array						// This loop generates buttons and assigns them scripts. 			for ( var i = 0; i < button_count; i++ ) {				var _mc = new Symbol1();	// Make a new button. 				addChild( _mc );			// Add that button to the display list				button_array.push( _mc );	// add the button to the array								// Add some event listeners				_mc.addEventListener( MouseEvent.ROLL_OVER, pop_open );				_mc.addEventListener( MouseEvent.ROLL_OUT, pop_close );				_mc.addEventListener( MouseEvent.CLICK, select_box );								// Set the initial scale and position				_mc.scaleX = _mc.scaleY = 0;				_mc.x = 66 + ( Math.floor( i / row_count ) * 30 );				_mc.y = 66 + ( ( i % row_count ) * 30 );								// Add the intro tween				Tweener.addTween( _mc, intro_tween );				intro_tween.delay += .15; // Add a little to the delay so the next button lags			}					}				private function pop_open( evt:Event ):void {			var target = evt.currentTarget;			Tweener.addTween( target, open_tween );		}				private function pop_close( evt:Event ):void {			var target = evt.currentTarget;			Tweener.addTween( target, close_tween );		}				// This function selects the current button and deselects any button that might be currently selected. 		private function select_box( evt:Event ):void {			var target = evt.currentTarget;				// Get the current button			Tweener.addTween( target, select_tween );	// Use some tweens to the button is selected and clicked			Tweener.addTween( target, click_tween );						// Loop through the button_array and assign the deselect tween to each button that is not 			// the currently selected button.			for ( var p in button_array ) {				if ( button_array[p] != target ) {					Tweener.addTween( button_array[p], deselect_tween );				}			}		}	}}