/* ************************************* * Magnifying Glass * http://www.FlepStudio.org          * © Author: Filippo Lughi            * version 1.0                        ************************************* */package org.flepstudio{	import flash.display.MovieClip;	import flash.display.Loader;	import flash.events.Event;	import flash.net.URLRequest;	import flash.display.BitmapData;	import flash.display.Bitmap;	import flash.filters.DisplacementMapFilter;	import flash.geom.Point;	import flash.geom.Rectangle;	import flash.ui.Mouse;		public class MagnifyingGlass extends MovieClip	{		private var IMAGE_PATH:String;				private var father:MovieClip;		private var container_mc:MovieClip;				private var circle_mc:Circle;		private var mask_mc:Circle;		private var glass_mc:Glass;				private var bit_1:BitmapData;		private var bit_2:BitmapData;		private var bit_3:BitmapData;				private var disp_filter:DisplacementMapFilter;				private var loader:Loader;				private var request:URLRequest;				public function MagnifyingGlass(s:String)		{			IMAGE_PATH=s;						addEventListener(Event.ADDED_TO_STAGE,init);		}				private function init(evt:Event):void		{			removeEventListener(Event.ADDED_TO_STAGE,init);						father=parent as MovieClip;						stage.frameRate=31;						father.preloader_mc.width=father.preloader_mc.height=50;			father.preloader_mc.x=stage.stageWidth/2-father.preloader_mc.width/2;			father.preloader_mc.y=stage.stageHeight/2-father.preloader_mc.height/2;						loadImage();		}				private function loadImage():void		{			request=new URLRequest(IMAGE_PATH);			loader=new Loader();			loader.contentLoaderInfo.addEventListener(Event.COMPLETE,setComplete);			loader.load(request);		}				private function setComplete(evt:Event):void		{			father.preloader_mc.stop();			father.removeChild(father.preloader_mc);			addChild(evt.target.loader);						Mouse.hide();						createClips();			initGlass();			addEventListener(Event.ENTER_FRAME,magnify);		}				private function createClips():void		{			circle_mc=new Circle();			addChild(circle_mc);						container_mc=new MovieClip();			addChild(container_mc);						mask_mc=new Circle();			addChild(mask_mc);						glass_mc=new Glass();			addChild(glass_mc);		}				private function initGlass():void		{			bit_1=new BitmapData(loader.width,loader.height,false,0x00FFFFFF);			bit_2=new BitmapData(circle_mc.width,circle_mc.height,false,0x00FFFFFF);			bit_3=new BitmapData(300,300,true,0x00FFFFFF);						disp_filter=new DisplacementMapFilter(bit_2,new Point(0,0),1,1,50,50);						loader.width/=2;			loader.height/=2;						circle_mc.visible=false;			container_mc.mask=mask_mc;						bit_1.draw(loader);			bit_2.draw(circle_mc);						var b:Bitmap=new Bitmap(bit_3)			container_mc.addChild(b);		}				private function magnify(evt:Event):void		{			var distance:Number=mask_mc.width/2;						container_mc.x=mouseX-distance;			container_mc.y=mouseY-distance;			mask_mc.x=mouseX-distance;			mask_mc.y=mouseY-distance;			glass_mc.x=mouseX;			glass_mc.y=mouseY;						bit_3.copyPixels(bit_1,new Rectangle(mouseX*2-distance,mouseY*2-distance*1.5,200,200),new Point(0,0))			bit_3.applyFilter(bit_3,bit_3.rect,new Point(0,0),disp_filter)		}	}}